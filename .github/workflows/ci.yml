name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # 1
  build_and_test:
    name: Build and test project
    runs-on: ubuntu-latest

    # integration test environment
    services:
      dbserver:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: local
          MYSQL_USER: local
          MYSQL_PASSWORD: local
          MYSQL_DATABASE: shop
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test project with Maven
        run: ./mvnw -B package --file pom.xml
  # 2
  publish_docker_image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [ build_and_test ]

    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Container image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .

      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}